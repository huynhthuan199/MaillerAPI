/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package apollogix;

import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.function.Predicate;

import apollogix.helper.ReflectionConvertRawData;
import apollogix.model.AppConfig;
import apollogix.model.Result;
import apollogix.service.SenderMailService;
import apollogix.serviceimpl.SenderMailServiceImpl;

/**
 * FileMultipartMailReader <br/>
 * Main class for library
 * @author ThuanNH
 */
public class FileMultipartMailReader<T> {

	/**
	 * Main method handle lab
	 * @param appConfig            - contains all setting for library
	 * @param conds                - condition for loop raw data by file if null will default by lab
	 * @return List<DataRowExcel>
	 * @throws ParseException
	 */
	public List<Result<T>> convertRawFileToObject(AppConfig appConfig, List<Predicate<T>> conds, Class<T> type)
			throws ParseException {
		List<Result<T>> results = new ArrayList<>();

		SenderMailService senderMailService = new SenderMailServiceImpl(appConfig);
		List<String> absoluteParts = senderMailService.readMailGetMultiPartFile();

		for (String absolutePart : absoluteParts) {
			Result<T> result = new Result<>();
			result.setStrFileName(absolutePart);
			result.setRowExcel(this.handleResultSingleFile(absolutePart, conds, type));
			results.add(result);
		}

		return results;
	}

	private List<T> handleResultSingleFile(String absolutePart, List<Predicate<T>> conds, Class<T> type) {

		ReflectionConvertRawData<T> abc = new ReflectionConvertRawData<>();

		List<T> rows = abc.convertRawToObject(absolutePart, type);

		if (rows.isEmpty() || Objects.isNull(conds)) {
			return rows;
		}

		List<T> result = new ArrayList<>();

		//this block options feature for user
		if (!conds.isEmpty()) {
			for (Predicate<T> preCond : conds) {
				result.addAll(rows.stream().filter(preCond).toList());
			}
		}
		return result;
	}
}
